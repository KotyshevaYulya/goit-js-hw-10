{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\n\nlet userSelectedDate;\nlet milliseconds;\nlet days;\nlet hours;\nlet minutes;\nlet seconds;\n\nconst input = document.querySelector('#datetime-picker');\nconst timerValue = document.querySelectorAll(\".value\");\nconst currentDate = Date.now();\nconst startBtn = document.querySelector('[data-start]');\nstartBtn.setAttribute('disabled', '');\n\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n//   minDate: currentDate,\n    onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n        console.log(selectedDates[0]);\n        if (userSelectedDate < currentDate) {\n    iziToast.error({\n        color: 'red',\n        position: 'topRight',\n        message: `Please choose a date in the future`,\n      });\n        } else {\n            startBtn.removeAttribute('disabled', '');\n\n        }\n  },\n};\n\nflatpickr(input, options);\n\nstartBtn.addEventListener('click', () => {\n    startBtn.setAttribute('disabled', '');\n    input.setAttribute('disabled', '');\n    const intervalId = setInterval(() => {\n        const carrentTime = Date.now();\n         milliseconds = userSelectedDate.getTime() - carrentTime;\n        console.log(convertMs(milliseconds));\n\n        timerValue[0].textContent = days.toString().padStart(2, '0');\n        timerValue[1].textContent = hours.toString().padStart(2, '0');\n        timerValue[2].textContent = minutes.toString().padStart(2, '0');\n        timerValue[3].textContent = seconds.toString().padStart(2, '0');\n        if (milliseconds < 1000) {\n            startBtn.removeAttribute('disabled', '');\n            clearInterval(intervalId);\n        };\n  }, 1000);\n});\n\n\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  days = Math.floor(ms / day);\n  // Remaining hours\n  hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n    \n  return { days, hours, minutes, seconds };\n}\n\n"],"names":["userSelectedDate","milliseconds","days","hours","minutes","seconds","input","timerValue","currentDate","startBtn","options","selectedDates","iziToast","flatpickr","intervalId","carrentTime","convertMs","ms"],"mappings":"+IAOA,IAAIA,EACAC,EACAC,EACAC,EACAC,EACAC,EAEJ,MAAMC,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAa,SAAS,iBAAiB,QAAQ,EAC/CC,EAAc,KAAK,MACnBC,EAAW,SAAS,cAAc,cAAc,EACtDA,EAAS,aAAa,WAAY,EAAE,EAGpC,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EAEf,QAAQC,EAAe,CACvBX,EAAmBW,EAAc,CAAC,EAC9B,QAAQ,IAAIA,EAAc,CAAC,CAAC,EACxBX,EAAmBQ,EAC3BI,EAAS,MAAM,CACX,MAAO,MACP,SAAU,WACV,QAAS,oCACjB,CAAO,EAEKH,EAAS,gBAAgB,WAAY,EAAE,CAGhD,CACH,EAEAI,EAAUP,EAAOI,CAAO,EAExBD,EAAS,iBAAiB,QAAS,IAAM,CACrCA,EAAS,aAAa,WAAY,EAAE,EACpCH,EAAM,aAAa,WAAY,EAAE,EACjC,MAAMQ,EAAa,YAAY,IAAM,CACjC,MAAMC,EAAc,KAAK,MACxBd,EAAeD,EAAiB,QAAS,EAAGe,EAC7C,QAAQ,IAAIC,EAAUf,CAAY,CAAC,EAEnCM,EAAW,CAAC,EAAE,YAAcL,EAAK,SAAQ,EAAG,SAAS,EAAG,GAAG,EAC3DK,EAAW,CAAC,EAAE,YAAcJ,EAAM,SAAQ,EAAG,SAAS,EAAG,GAAG,EAC5DI,EAAW,CAAC,EAAE,YAAcH,EAAQ,SAAQ,EAAG,SAAS,EAAG,GAAG,EAC9DG,EAAW,CAAC,EAAE,YAAcF,EAAQ,SAAQ,EAAG,SAAS,EAAG,GAAG,EAC1DJ,EAAe,MACfQ,EAAS,gBAAgB,WAAY,EAAE,EACvC,cAAcK,CAAU,EAEjC,EAAE,GAAI,CACT,CAAC,EAID,SAASE,EAAUC,EAAI,CAQrB,OAAAf,EAAO,KAAK,MAAMe,EAAK,KAAG,EAE1Bd,EAAQ,KAAK,MAAOc,EAAK,MAAO,IAAI,EAEpCb,EAAU,KAAK,MAAQa,EAAK,MAAO,KAAQ,GAAM,EAEjDZ,EAAU,KAAK,MAASY,EAAK,MAAO,KAAQ,IAAU,GAAM,EAGrD,CAAE,KAAAf,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}